{"version":3,"file":"js/6133-legacy.d033077a.js","mappings":"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","sources":["webpack://ServerWand/./node_modules/resumablejs/resumable.js","webpack://ServerWand/./src/components/Files/Upload.vue","webpack://ServerWand/./src/components/Files/Upload.vue?f4ae","webpack://ServerWand/./src/components/Loading.vue","webpack://ServerWand/./src/components/Loading.vue?1ccf"],"sourcesContent":["/*\n* MIT Licensed\n* http://www.23developer.com/opensource\n* http://github.com/23/resumable.js\n* Steffen Tiedemann Christensen, steffen@23company.com\n*/\n\n(function(){\n\"use strict\";\n\n  var Resumable = function(opts){\n    if ( !(this instanceof Resumable) ) {\n      return new Resumable(opts);\n    }\n    this.version = 1.0;\n    // SUPPORTED BY BROWSER?\n    // Check if these features are support by the browser:\n    // - File object type\n    // - Blob object type\n    // - FileList object type\n    // - slicing files\n    this.support = (\n                   (typeof(File)!=='undefined')\n                   &&\n                   (typeof(Blob)!=='undefined')\n                   &&\n                   (typeof(FileList)!=='undefined')\n                   &&\n                   (!!Blob.prototype.webkitSlice||!!Blob.prototype.mozSlice||!!Blob.prototype.slice||false)\n                   );\n    if(!this.support) return(false);\n\n\n    // PROPERTIES\n    var $ = this;\n    $.files = [];\n    $.defaults = {\n      chunkSize:1*1024*1024,\n      forceChunkSize:false,\n      simultaneousUploads:3,\n      fileParameterName:'file',\n      chunkNumberParameterName: 'resumableChunkNumber',\n      chunkSizeParameterName: 'resumableChunkSize',\n      currentChunkSizeParameterName: 'resumableCurrentChunkSize',\n      totalSizeParameterName: 'resumableTotalSize',\n      typeParameterName: 'resumableType',\n      identifierParameterName: 'resumableIdentifier',\n      fileNameParameterName: 'resumableFilename',\n      relativePathParameterName: 'resumableRelativePath',\n      totalChunksParameterName: 'resumableTotalChunks',\n      throttleProgressCallbacks: 0.5,\n      query:{},\n      headers:{},\n      preprocess:null,\n      method:'multipart',\n      uploadMethod: 'POST',\n      testMethod: 'GET',\n      prioritizeFirstAndLastChunk:false,\n      target:'/',\n      testTarget: null,\n      parameterNamespace:'',\n      testChunks:true,\n      generateUniqueIdentifier:null,\n      getTarget:null,\n      maxChunkRetries:100,\n      chunkRetryInterval:undefined,\n      permanentErrors:[400, 404, 415, 500, 501],\n      maxFiles:undefined,\n      withCredentials:false,\n      xhrTimeout:0,\n      clearInput:true,\n      chunkFormat:'blob',\n      setChunkTypeFromFile:false,\n      maxFilesErrorCallback:function (files, errorCount) {\n        var maxFiles = $.getOpt('maxFiles');\n        alert('Please upload no more than ' + maxFiles + ' file' + (maxFiles === 1 ? '' : 's') + ' at a time.');\n      },\n      minFileSize:1,\n      minFileSizeErrorCallback:function(file, errorCount) {\n        alert(file.fileName||file.name +' is too small, please upload files larger than ' + $h.formatSize($.getOpt('minFileSize')) + '.');\n      },\n      maxFileSize:undefined,\n      maxFileSizeErrorCallback:function(file, errorCount) {\n        alert(file.fileName||file.name +' is too large, please upload files less than ' + $h.formatSize($.getOpt('maxFileSize')) + '.');\n      },\n      fileType: [],\n      fileTypeErrorCallback: function(file, errorCount) {\n        alert(file.fileName||file.name +' has type not allowed, please upload files of type ' + $.getOpt('fileType') + '.');\n      }\n    };\n    $.opts = opts||{};\n    $.getOpt = function(o) {\n      var $opt = this;\n      // Get multiple option if passed an array\n      if(o instanceof Array) {\n        var options = {};\n        $h.each(o, function(option){\n          options[option] = $opt.getOpt(option);\n        });\n        return options;\n      }\n      // Otherwise, just return a simple option\n      if ($opt instanceof ResumableChunk) {\n        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }\n        else { $opt = $opt.fileObj; }\n      }\n      if ($opt instanceof ResumableFile) {\n        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }\n        else { $opt = $opt.resumableObj; }\n      }\n      if ($opt instanceof Resumable) {\n        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }\n        else { return $opt.defaults[o]; }\n      }\n    };\n\n    // EVENTS\n    // catchAll(event, ...)\n    // fileSuccess(file), fileProgress(file), fileAdded(file, event), filesAdded(files, filesSkipped), fileRetry(file),\n    // fileError(file, message), complete(), progress(), error(message, file), pause()\n    $.events = [];\n    $.on = function(event,callback){\n      $.events.push(event.toLowerCase(), callback);\n    };\n    $.fire = function(){\n      // `arguments` is an object, not array, in FF, so:\n      var args = [];\n      for (var i=0; i<arguments.length; i++) args.push(arguments[i]);\n      // Find event listeners, and support pseudo-event `catchAll`\n      var event = args[0].toLowerCase();\n      for (var i=0; i<=$.events.length; i+=2) {\n        if($.events[i]==event) $.events[i+1].apply($,args.slice(1));\n        if($.events[i]=='catchall') $.events[i+1].apply(null,args);\n      }\n      if(event=='fileerror') $.fire('error', args[2], args[1]);\n      if(event=='fileprogress') $.fire('progress');\n    };\n\n\n    // INTERNAL HELPER METHODS (handy, but ultimately not part of uploading)\n    var $h = {\n      stopEvent: function(e){\n        e.stopPropagation();\n        e.preventDefault();\n      },\n      each: function(o,callback){\n        if(typeof(o.length)!=='undefined') {\n          for (var i=0; i<o.length; i++) {\n            // Array or FileList\n            if(callback(o[i])===false) return;\n          }\n        } else {\n          for (i in o) {\n            // Object\n            if(callback(i,o[i])===false) return;\n          }\n        }\n      },\n      generateUniqueIdentifier:function(file, event){\n        var custom = $.getOpt('generateUniqueIdentifier');\n        if(typeof custom === 'function') {\n          return custom(file, event);\n        }\n        var relativePath = file.webkitRelativePath||file.fileName||file.name; // Some confusion in different versions of Firefox\n        var size = file.size;\n        return(size + '-' + relativePath.replace(/[^0-9a-zA-Z_-]/img, ''));\n      },\n      contains:function(array,test) {\n        var result = false;\n\n        $h.each(array, function(value) {\n          if (value == test) {\n            result = true;\n            return false;\n          }\n          return true;\n        });\n\n        return result;\n      },\n      formatSize:function(size){\n        if(size<1024) {\n          return size + ' bytes';\n        } else if(size<1024*1024) {\n          return (size/1024.0).toFixed(0) + ' KB';\n        } else if(size<1024*1024*1024) {\n          return (size/1024.0/1024.0).toFixed(1) + ' MB';\n        } else {\n          return (size/1024.0/1024.0/1024.0).toFixed(1) + ' GB';\n        }\n      },\n      getTarget:function(request, params){\n        var target = $.getOpt('target');\n\n        if (request === 'test' && $.getOpt('testTarget')) {\n          target = $.getOpt('testTarget') === '/' ? $.getOpt('target') : $.getOpt('testTarget');\n        }\n\n        if (typeof target === 'function') {\n          return target(params);\n        }\n\n        var separator = target.indexOf('?') < 0 ? '?' : '&';\n        var joinedParams = params.join('&');\n\n        return target + separator + joinedParams;\n      }\n    };\n\n    var onDrop = function(event){\n      $h.stopEvent(event);\n\n      //handle dropped things as items if we can (this lets us deal with folders nicer in some cases)\n      if (event.dataTransfer && event.dataTransfer.items) {\n        loadFiles(event.dataTransfer.items, event);\n      }\n      //else handle them as files\n      else if (event.dataTransfer && event.dataTransfer.files) {\n        loadFiles(event.dataTransfer.files, event);\n      }\n    };\n    var preventDefault = function(e) {\n      e.preventDefault();\n    };\n\n    /**\n     * processes a single upload item (file or directory)\n     * @param {Object} item item to upload, may be file or directory entry\n     * @param {string} path current file path\n     * @param {File[]} items list of files to append new items to\n     * @param {Function} cb callback invoked when item is processed\n     */\n    function processItem(item, path, items, cb) {\n      var entry;\n      if(item.isFile){\n        // file provided\n        return item.file(function(file){\n          file.relativePath = path + file.name;\n          items.push(file);\n          cb();\n        });\n      }else if(item.isDirectory){\n        // item is already a directory entry, just assign\n        entry = item;\n      }else if(item instanceof File) {\n        items.push(item);\n      }\n      if('function' === typeof item.webkitGetAsEntry){\n        // get entry from file object\n        entry = item.webkitGetAsEntry();\n      }\n      if(entry && entry.isDirectory){\n        // directory provided, process it\n        return processDirectory(entry, path + entry.name + '/', items, cb);\n      }\n      if('function' === typeof item.getAsFile){\n        // item represents a File object, convert it\n        item = item.getAsFile();\n        if(item instanceof File) {\n          item.relativePath = path + item.name;\n          items.push(item);\n        }\n      }\n      cb(); // indicate processing is done\n    }\n\n\n    /**\n     * cps-style list iteration.\n     * invokes all functions in list and waits for their callback to be\n     * triggered.\n     * @param  {Function[]}   items list of functions expecting callback parameter\n     * @param  {Function} cb    callback to trigger after the last callback has been invoked\n     */\n    function processCallbacks(items, cb){\n      if(!items || items.length === 0){\n        // empty or no list, invoke callback\n        return cb();\n      }\n      // invoke current function, pass the next part as continuation\n      items[0](function(){\n        processCallbacks(items.slice(1), cb);\n      });\n    }\n\n    /**\n     * recursively traverse directory and collect files to upload\n     * @param  {Object}   directory directory to process\n     * @param  {string}   path      current path\n     * @param  {File[]}   items     target list of items\n     * @param  {Function} cb        callback invoked after traversing directory\n     */\n    function processDirectory (directory, path, items, cb) {\n      var dirReader = directory.createReader();\n      dirReader.readEntries(function(entries){\n        if(!entries.length){\n          // empty directory, skip\n          return cb();\n        }\n        // process all conversion callbacks, finally invoke own one\n        processCallbacks(\n          entries.map(function(entry){\n            // bind all properties except for callback\n            return processItem.bind(null, entry, path, items);\n          }),\n          cb\n        );\n      });\n    }\n\n    /**\n     * process items to extract files to be uploaded\n     * @param  {File[]} items items to process\n     * @param  {Event} event event that led to upload\n     */\n    function loadFiles(items, event) {\n      if(!items.length){\n        return; // nothing to do\n      }\n      $.fire('beforeAdd');\n      var files = [];\n      processCallbacks(\n          Array.prototype.map.call(items, function(item){\n            // bind all properties except for callback\n            return processItem.bind(null, item, \"\", files);\n          }),\n          function(){\n            if(files.length){\n              // at least one file found\n              appendFilesFromFileList(files, event);\n            }\n          }\n      );\n    };\n\n    var appendFilesFromFileList = function(fileList, event){\n      // check for uploading too many files\n      var errorCount = 0;\n      var o = $.getOpt(['maxFiles', 'minFileSize', 'maxFileSize', 'maxFilesErrorCallback', 'minFileSizeErrorCallback', 'maxFileSizeErrorCallback', 'fileType', 'fileTypeErrorCallback']);\n      if (typeof(o.maxFiles)!=='undefined' && o.maxFiles<(fileList.length+$.files.length)) {\n        // if single-file upload, file is already added, and trying to add 1 new file, simply replace the already-added file\n        if (o.maxFiles===1 && $.files.length===1 && fileList.length===1) {\n          $.removeFile($.files[0]);\n        } else {\n          o.maxFilesErrorCallback(fileList, errorCount++);\n          return false;\n        }\n      }\n      var files = [], filesSkipped = [], remaining = fileList.length;\n      var decreaseReamining = function(){\n        if(!--remaining){\n          // all files processed, trigger event\n          if(!files.length && !filesSkipped.length){\n            // no succeeded files, just skip\n            return;\n          }\n          window.setTimeout(function(){\n            $.fire('filesAdded', files, filesSkipped);\n          },0);\n        }\n      };\n      $h.each(fileList, function(file){\n        var fileName = file.name;\n        if(o.fileType.length > 0){\n          var fileTypeFound = false;\n          for(var index in o.fileType){\n            var extension = '.' + o.fileType[index];\n\t\t\tif(fileName.toLowerCase().indexOf(extension.toLowerCase(), fileName.length - extension.length) !== -1){\n              fileTypeFound = true;\n              break;\n            }\n          }\n          if (!fileTypeFound) {\n            o.fileTypeErrorCallback(file, errorCount++);\n            return false;\n          }\n        }\n\n        if (typeof(o.minFileSize)!=='undefined' && file.size<o.minFileSize) {\n          o.minFileSizeErrorCallback(file, errorCount++);\n          return false;\n        }\n        if (typeof(o.maxFileSize)!=='undefined' && file.size>o.maxFileSize) {\n          o.maxFileSizeErrorCallback(file, errorCount++);\n          return false;\n        }\n\n        function addFile(uniqueIdentifier){\n          if (!$.getFromUniqueIdentifier(uniqueIdentifier)) {(function(){\n            file.uniqueIdentifier = uniqueIdentifier;\n            var f = new ResumableFile($, file, uniqueIdentifier);\n            $.files.push(f);\n            files.push(f);\n            f.container = (typeof event != 'undefined' ? event.srcElement : null);\n            window.setTimeout(function(){\n              $.fire('fileAdded', f, event)\n            },0);\n          })()} else {\n            filesSkipped.push(file);\n          };\n          decreaseReamining();\n        }\n        // directories have size == 0\n        var uniqueIdentifier = $h.generateUniqueIdentifier(file, event);\n        if(uniqueIdentifier && typeof uniqueIdentifier.then === 'function'){\n          // Promise or Promise-like object provided as unique identifier\n          uniqueIdentifier\n          .then(\n            function(uniqueIdentifier){\n              // unique identifier generation succeeded\n              addFile(uniqueIdentifier);\n            },\n           function(){\n              // unique identifier generation failed\n              // skip further processing, only decrease file count\n              decreaseReamining();\n            }\n          );\n        }else{\n          // non-Promise provided as unique identifier, process synchronously\n          addFile(uniqueIdentifier);\n        }\n      });\n    };\n\n    // INTERNAL OBJECT TYPES\n    function ResumableFile(resumableObj, file, uniqueIdentifier){\n      var $ = this;\n      $.opts = {};\n      $.getOpt = resumableObj.getOpt;\n      $._prevProgress = 0;\n      $.resumableObj = resumableObj;\n      $.file = file;\n      $.fileName = file.fileName||file.name; // Some confusion in different versions of Firefox\n      $.size = file.size;\n      $.relativePath = file.relativePath || file.webkitRelativePath || $.fileName;\n      $.uniqueIdentifier = uniqueIdentifier;\n      $._pause = false;\n      $.container = '';\n      var _error = uniqueIdentifier !== undefined;\n\n      // Callback when something happens within the chunk\n      var chunkEvent = function(event, message){\n        // event can be 'progress', 'success', 'error' or 'retry'\n        switch(event){\n        case 'progress':\n          $.resumableObj.fire('fileProgress', $, message);\n          break;\n        case 'error':\n          $.abort();\n          _error = true;\n          $.chunks = [];\n          $.resumableObj.fire('fileError', $, message);\n          break;\n        case 'success':\n          if(_error) return;\n          $.resumableObj.fire('fileProgress', $); // it's at least progress\n          if($.isComplete()) {\n            $.resumableObj.fire('fileSuccess', $, message);\n          }\n          break;\n        case 'retry':\n          $.resumableObj.fire('fileRetry', $);\n          break;\n        }\n      };\n\n      // Main code to set up a file object with chunks,\n      // packaged to be able to handle retries if needed.\n      $.chunks = [];\n      $.abort = function(){\n        // Stop current uploads\n        var abortCount = 0;\n        $h.each($.chunks, function(c){\n          if(c.status()=='uploading') {\n            c.abort();\n            abortCount++;\n          }\n        });\n        if(abortCount>0) $.resumableObj.fire('fileProgress', $);\n      };\n      $.cancel = function(){\n        // Reset this file to be void\n        var _chunks = $.chunks;\n        $.chunks = [];\n        // Stop current uploads\n        $h.each(_chunks, function(c){\n          if(c.status()=='uploading')  {\n            c.abort();\n            $.resumableObj.uploadNextChunk();\n          }\n        });\n        $.resumableObj.removeFile($);\n        $.resumableObj.fire('fileProgress', $);\n      };\n      $.retry = function(){\n        $.bootstrap();\n        var firedRetry = false;\n        $.resumableObj.on('chunkingComplete', function(){\n          if(!firedRetry) $.resumableObj.upload();\n          firedRetry = true;\n        });\n      };\n      $.bootstrap = function(){\n        $.abort();\n        _error = false;\n        // Rebuild stack of chunks from file\n        $.chunks = [];\n        $._prevProgress = 0;\n        var round = $.getOpt('forceChunkSize') ? Math.ceil : Math.floor;\n        var maxOffset = Math.max(round($.file.size/$.getOpt('chunkSize')),1);\n        for (var offset=0; offset<maxOffset; offset++) {(function(offset){\n            window.setTimeout(function(){\n                $.chunks.push(new ResumableChunk($.resumableObj, $, offset, chunkEvent));\n                $.resumableObj.fire('chunkingProgress',$,offset/maxOffset);\n            },0);\n        })(offset)}\n        window.setTimeout(function(){\n            $.resumableObj.fire('chunkingComplete',$);\n        },0);\n      };\n      $.progress = function(){\n        if(_error) return(1);\n        // Sum up progress across everything\n        var ret = 0;\n        var error = false;\n        $h.each($.chunks, function(c){\n          if(c.status()=='error') error = true;\n          ret += c.progress(true); // get chunk progress relative to entire file\n        });\n        ret = (error ? 1 : (ret>0.99999 ? 1 : ret));\n        ret = Math.max($._prevProgress, ret); // We don't want to lose percentages when an upload is paused\n        $._prevProgress = ret;\n        return(ret);\n      };\n      $.isUploading = function(){\n        var uploading = false;\n        $h.each($.chunks, function(chunk){\n          if(chunk.status()=='uploading') {\n            uploading = true;\n            return(false);\n          }\n        });\n        return(uploading);\n      };\n      $.isComplete = function(){\n        var outstanding = false;\n        $h.each($.chunks, function(chunk){\n          var status = chunk.status();\n          if(status=='pending' || status=='uploading' || chunk.preprocessState === 1) {\n            outstanding = true;\n            return(false);\n          }\n        });\n        return(!outstanding);\n      };\n      $.pause = function(pause){\n          if(typeof(pause)==='undefined'){\n              $._pause = ($._pause ? false : true);\n          }else{\n              $._pause = pause;\n          }\n      };\n      $.isPaused = function() {\n        return $._pause;\n      };\n\n\n      // Bootstrap and return\n      $.resumableObj.fire('chunkingStart', $);\n      $.bootstrap();\n      return(this);\n    }\n\n\n    function ResumableChunk(resumableObj, fileObj, offset, callback){\n      var $ = this;\n      $.opts = {};\n      $.getOpt = resumableObj.getOpt;\n      $.resumableObj = resumableObj;\n      $.fileObj = fileObj;\n      $.fileObjSize = fileObj.size;\n      $.fileObjType = fileObj.file.type;\n      $.offset = offset;\n      $.callback = callback;\n      $.lastProgressCallback = (new Date);\n      $.tested = false;\n      $.retries = 0;\n      $.pendingRetry = false;\n      $.preprocessState = 0; // 0 = unprocessed, 1 = processing, 2 = finished\n\n      // Computed properties\n      var chunkSize = $.getOpt('chunkSize');\n      $.loaded = 0;\n      $.startByte = $.offset*chunkSize;\n      $.endByte = Math.min($.fileObjSize, ($.offset+1)*chunkSize);\n      if ($.fileObjSize-$.endByte < chunkSize && !$.getOpt('forceChunkSize')) {\n        // The last chunk will be bigger than the chunk size, but less than 2*chunkSize\n        $.endByte = $.fileObjSize;\n      }\n      $.xhr = null;\n\n      // test() makes a GET request without any data to see if the chunk has already been uploaded in a previous session\n      $.test = function(){\n        // Set up request and listen for event\n        $.xhr = new XMLHttpRequest();\n\n        var testHandler = function(e){\n          $.tested = true;\n          var status = $.status();\n          if(status=='success') {\n            $.callback(status, $.message());\n            $.resumableObj.uploadNextChunk();\n          } else {\n            $.send();\n          }\n        };\n        $.xhr.addEventListener('load', testHandler, false);\n        $.xhr.addEventListener('error', testHandler, false);\n        $.xhr.addEventListener('timeout', testHandler, false);\n\n        // Add data from the query options\n        var params = [];\n        var parameterNamespace = $.getOpt('parameterNamespace');\n        var customQuery = $.getOpt('query');\n        if(typeof customQuery == 'function') customQuery = customQuery($.fileObj, $);\n        $h.each(customQuery, function(k,v){\n          params.push([encodeURIComponent(parameterNamespace+k), encodeURIComponent(v)].join('='));\n        });\n        // Add extra data to identify chunk\n        params = params.concat(\n          [\n            // define key/value pairs for additional parameters\n            ['chunkNumberParameterName', $.offset + 1],\n            ['chunkSizeParameterName', $.getOpt('chunkSize')],\n            ['currentChunkSizeParameterName', $.endByte - $.startByte],\n            ['totalSizeParameterName', $.fileObjSize],\n            ['typeParameterName', $.fileObjType],\n            ['identifierParameterName', $.fileObj.uniqueIdentifier],\n            ['fileNameParameterName', $.fileObj.fileName],\n            ['relativePathParameterName', $.fileObj.relativePath],\n            ['totalChunksParameterName', $.fileObj.chunks.length]\n          ].filter(function(pair){\n            // include items that resolve to truthy values\n            // i.e. exclude false, null, undefined and empty strings\n            return $.getOpt(pair[0]);\n          })\n          .map(function(pair){\n            // map each key/value pair to its final form\n            return [\n              parameterNamespace + $.getOpt(pair[0]),\n              encodeURIComponent(pair[1])\n            ].join('=');\n          })\n        );\n        // Append the relevant chunk and send it\n        $.xhr.open($.getOpt('testMethod'), $h.getTarget('test', params));\n        $.xhr.timeout = $.getOpt('xhrTimeout');\n        $.xhr.withCredentials = $.getOpt('withCredentials');\n        // Add data from header options\n        var customHeaders = $.getOpt('headers');\n        if(typeof customHeaders === 'function') {\n          customHeaders = customHeaders($.fileObj, $);\n        }\n        $h.each(customHeaders, function(k,v) {\n          $.xhr.setRequestHeader(k, v);\n        });\n        $.xhr.send(null);\n      };\n\n      $.preprocessFinished = function(){\n        $.preprocessState = 2;\n        $.send();\n      };\n\n      // send() uploads the actual data in a POST call\n      $.send = function(){\n        var preprocess = $.getOpt('preprocess');\n        if(typeof preprocess === 'function') {\n          switch($.preprocessState) {\n          case 0: $.preprocessState = 1; preprocess($); return;\n          case 1: return;\n          case 2: break;\n          }\n        }\n        if($.getOpt('testChunks') && !$.tested) {\n          $.test();\n          return;\n        }\n\n        // Set up request and listen for event\n        $.xhr = new XMLHttpRequest();\n\n        // Progress\n        $.xhr.upload.addEventListener('progress', function(e){\n          if( (new Date) - $.lastProgressCallback > $.getOpt('throttleProgressCallbacks') * 1000 ) {\n            $.callback('progress');\n            $.lastProgressCallback = (new Date);\n          }\n          $.loaded=e.loaded||0;\n        }, false);\n        $.loaded = 0;\n        $.pendingRetry = false;\n        $.callback('progress');\n\n        // Done (either done, failed or retry)\n        var doneHandler = function(e){\n          var status = $.status();\n          if(status=='success'||status=='error') {\n            $.callback(status, $.message());\n            $.resumableObj.uploadNextChunk();\n          } else {\n            $.callback('retry', $.message());\n            $.abort();\n            $.retries++;\n            var retryInterval = $.getOpt('chunkRetryInterval');\n            if(retryInterval !== undefined) {\n              $.pendingRetry = true;\n              setTimeout($.send, retryInterval);\n            } else {\n              $.send();\n            }\n          }\n        };\n        $.xhr.addEventListener('load', doneHandler, false);\n        $.xhr.addEventListener('error', doneHandler, false);\n        $.xhr.addEventListener('timeout', doneHandler, false);\n\n        // Set up the basic query data from Resumable\n        var query = [\n          ['chunkNumberParameterName', $.offset + 1],\n          ['chunkSizeParameterName', $.getOpt('chunkSize')],\n          ['currentChunkSizeParameterName', $.endByte - $.startByte],\n          ['totalSizeParameterName', $.fileObjSize],\n          ['typeParameterName', $.fileObjType],\n          ['identifierParameterName', $.fileObj.uniqueIdentifier],\n          ['fileNameParameterName', $.fileObj.fileName],\n          ['relativePathParameterName', $.fileObj.relativePath],\n          ['totalChunksParameterName', $.fileObj.chunks.length],\n        ].filter(function(pair){\n          // include items that resolve to truthy values\n          // i.e. exclude false, null, undefined and empty strings\n          return $.getOpt(pair[0]);\n        })\n        .reduce(function(query, pair){\n          // assign query key/value\n          query[$.getOpt(pair[0])] = pair[1];\n          return query;\n        }, {});\n        // Mix in custom data\n        var customQuery = $.getOpt('query');\n        if(typeof customQuery == 'function') customQuery = customQuery($.fileObj, $);\n        $h.each(customQuery, function(k,v){\n          query[k] = v;\n        });\n\n        var func = ($.fileObj.file.slice ? 'slice' : ($.fileObj.file.mozSlice ? 'mozSlice' : ($.fileObj.file.webkitSlice ? 'webkitSlice' : 'slice')));\n        var bytes = $.fileObj.file[func]($.startByte, $.endByte, $.getOpt('setChunkTypeFromFile') ? $.fileObj.file.type : \"\");\n        var data = null;\n        var params = [];\n\n        var parameterNamespace = $.getOpt('parameterNamespace');\n                if ($.getOpt('method') === 'octet') {\n                    // Add data from the query options\n                    data = bytes;\n                    $h.each(query, function (k, v) {\n                        params.push([encodeURIComponent(parameterNamespace + k), encodeURIComponent(v)].join('='));\n                    });\n                } else {\n                    // Add data from the query options\n                    data = new FormData();\n                    $h.each(query, function (k, v) {\n                        data.append(parameterNamespace + k, v);\n                        params.push([encodeURIComponent(parameterNamespace + k), encodeURIComponent(v)].join('='));\n                    });\n                    if ($.getOpt('chunkFormat') == 'blob') {\n                        data.append(parameterNamespace + $.getOpt('fileParameterName'), bytes, $.fileObj.fileName);\n                    }\n                    else if ($.getOpt('chunkFormat') == 'base64') {\n                        var fr = new FileReader();\n                        fr.onload = function (e) {\n                            data.append(parameterNamespace + $.getOpt('fileParameterName'), fr.result);\n                            $.xhr.send(data);\n                        }\n                        fr.readAsDataURL(bytes);\n                    }\n                }\n\n        var target = $h.getTarget('upload', params);\n        var method = $.getOpt('uploadMethod');\n\n        $.xhr.open(method, target);\n        if ($.getOpt('method') === 'octet') {\n          $.xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n        }\n        $.xhr.timeout = $.getOpt('xhrTimeout');\n        $.xhr.withCredentials = $.getOpt('withCredentials');\n        // Add data from header options\n        var customHeaders = $.getOpt('headers');\n        if(typeof customHeaders === 'function') {\n          customHeaders = customHeaders($.fileObj, $);\n        }\n\n        $h.each(customHeaders, function(k,v) {\n          $.xhr.setRequestHeader(k, v);\n        });\n\n                if ($.getOpt('chunkFormat') == 'blob') {\n                    $.xhr.send(data);\n                }\n      };\n      $.abort = function(){\n        // Abort and reset\n        if($.xhr) $.xhr.abort();\n        $.xhr = null;\n      };\n      $.status = function(){\n        // Returns: 'pending', 'uploading', 'success', 'error'\n        if($.pendingRetry) {\n          // if pending retry then that's effectively the same as actively uploading,\n          // there might just be a slight delay before the retry starts\n          return('uploading');\n        } else if(!$.xhr) {\n          return('pending');\n        } else if($.xhr.readyState<4) {\n          // Status is really 'OPENED', 'HEADERS_RECEIVED' or 'LOADING' - meaning that stuff is happening\n          return('uploading');\n        } else {\n          if($.xhr.status == 200 || $.xhr.status == 201) {\n            // HTTP 200, 201 (created)\n            return('success');\n          } else if($h.contains($.getOpt('permanentErrors'), $.xhr.status) || $.retries >= $.getOpt('maxChunkRetries')) {\n            // HTTP 415/500/501, permanent error\n            return('error');\n          } else {\n            // this should never happen, but we'll reset and queue a retry\n            // a likely case for this would be 503 service unavailable\n            $.abort();\n            return('pending');\n          }\n        }\n      };\n      $.message = function(){\n        return($.xhr ? $.xhr.responseText : '');\n      };\n      $.progress = function(relative){\n        if(typeof(relative)==='undefined') relative = false;\n        var factor = (relative ? ($.endByte-$.startByte)/$.fileObjSize : 1);\n        if($.pendingRetry) return(0);\n        if(!$.xhr || !$.xhr.status) factor*=.95;\n        var s = $.status();\n        switch(s){\n        case 'success':\n        case 'error':\n          return(1*factor);\n        case 'pending':\n          return(0*factor);\n        default:\n          return($.loaded/($.endByte-$.startByte)*factor);\n        }\n      };\n      return(this);\n    }\n\n    // QUEUE\n    $.uploadNextChunk = function(){\n      var found = false;\n\n      // In some cases (such as videos) it's really handy to upload the first\n      // and last chunk of a file quickly; this let's the server check the file's\n      // metadata and determine if there's even a point in continuing.\n      if ($.getOpt('prioritizeFirstAndLastChunk')) {\n        $h.each($.files, function(file){\n          if(file.chunks.length && file.chunks[0].status()=='pending' && file.chunks[0].preprocessState === 0) {\n            file.chunks[0].send();\n            found = true;\n            return(false);\n          }\n          if(file.chunks.length>1 && file.chunks[file.chunks.length-1].status()=='pending' && file.chunks[file.chunks.length-1].preprocessState === 0) {\n            file.chunks[file.chunks.length-1].send();\n            found = true;\n            return(false);\n          }\n        });\n        if(found) return(true);\n      }\n\n      // Now, simply look for the next, best thing to upload\n      $h.each($.files, function(file){\n        if(file.isPaused()===false){\n         $h.each(file.chunks, function(chunk){\n           if(chunk.status()=='pending' && chunk.preprocessState === 0) {\n             chunk.send();\n             found = true;\n             return(false);\n           }\n          });\n        }\n        if(found) return(false);\n      });\n      if(found) return(true);\n\n      // The are no more outstanding chunks to upload, check is everything is done\n      var outstanding = false;\n      $h.each($.files, function(file){\n        if(!file.isComplete()) {\n          outstanding = true;\n          return(false);\n        }\n      });\n      if(!outstanding) {\n        // All chunks have been uploaded, complete\n        $.fire('complete');\n      }\n      return(false);\n    };\n\n\n    // PUBLIC METHODS FOR RESUMABLE.JS\n    $.assignBrowse = function(domNodes, isDirectory){\n      if(typeof(domNodes.length)=='undefined') domNodes = [domNodes];\n\n      $h.each(domNodes, function(domNode) {\n        var input;\n        if(domNode.tagName==='INPUT' && domNode.type==='file'){\n          input = domNode;\n        } else {\n          input = document.createElement('input');\n          input.setAttribute('type', 'file');\n          input.style.display = 'none';\n          domNode.addEventListener('click', function(){\n            input.style.opacity = 0;\n            input.style.display='block';\n            input.focus();\n            input.click();\n            input.style.display='none';\n          }, false);\n          domNode.appendChild(input);\n        }\n        var maxFiles = $.getOpt('maxFiles');\n        if (typeof(maxFiles)==='undefined'||maxFiles!=1){\n          input.setAttribute('multiple', 'multiple');\n        } else {\n          input.removeAttribute('multiple');\n        }\n        if(isDirectory){\n          input.setAttribute('webkitdirectory', 'webkitdirectory');\n        } else {\n          input.removeAttribute('webkitdirectory');\n        }\n        var fileTypes = $.getOpt('fileType');\n        if (typeof (fileTypes) !== 'undefined' && fileTypes.length >= 1) {\n          input.setAttribute('accept', fileTypes.map(function (e) { return '.' + e }).join(','));\n        }\n        else {\n          input.removeAttribute('accept');\n        }\n        // When new files are added, simply append them to the overall list\n        input.addEventListener('change', function(e){\n          appendFilesFromFileList(e.target.files,e);\n          var clearInput = $.getOpt('clearInput');\n          if (clearInput) {\n            e.target.value = '';\n          }\n        }, false);\n      });\n    };\n    $.assignDrop = function(domNodes){\n      if(typeof(domNodes.length)=='undefined') domNodes = [domNodes];\n\n      $h.each(domNodes, function(domNode) {\n        domNode.addEventListener('dragover', preventDefault, false);\n        domNode.addEventListener('dragenter', preventDefault, false);\n        domNode.addEventListener('drop', onDrop, false);\n      });\n    };\n    $.unAssignDrop = function(domNodes) {\n      if (typeof(domNodes.length) == 'undefined') domNodes = [domNodes];\n\n      $h.each(domNodes, function(domNode) {\n        domNode.removeEventListener('dragover', preventDefault);\n        domNode.removeEventListener('dragenter', preventDefault);\n        domNode.removeEventListener('drop', onDrop);\n      });\n    };\n    $.isUploading = function(){\n      var uploading = false;\n      $h.each($.files, function(file){\n        if (file.isUploading()) {\n          uploading = true;\n          return(false);\n        }\n      });\n      return(uploading);\n    };\n    $.upload = function(){\n      // Make sure we don't start too many uploads at once\n      if($.isUploading()) return;\n      // Kick off the queue\n      $.fire('uploadStart');\n      for (var num=1; num<=$.getOpt('simultaneousUploads'); num++) {\n        $.uploadNextChunk();\n      }\n    };\n    $.pause = function(){\n      // Resume all chunks currently being uploaded\n      $h.each($.files, function(file){\n        file.abort();\n      });\n      $.fire('pause');\n    };\n    $.cancel = function(){\n      $.fire('beforeCancel');\n      for(var i = $.files.length - 1; i >= 0; i--) {\n        $.files[i].cancel();\n      }\n      $.fire('cancel');\n    };\n    $.progress = function(){\n      var totalDone = 0;\n      var totalSize = 0;\n      // Resume all chunks currently being uploaded\n      $h.each($.files, function(file){\n        totalDone += file.progress()*file.size;\n        totalSize += file.size;\n      });\n      return(totalSize>0 ? totalDone/totalSize : 0);\n    };\n    $.addFile = function(file, event){\n      appendFilesFromFileList([file], event);\n    };\n    $.addFiles = function(files, event){\n      appendFilesFromFileList(files, event);\n    };\n    $.removeFile = function(file){\n      for(var i = $.files.length - 1; i >= 0; i--) {\n        if($.files[i] === file) {\n          $.files.splice(i, 1);\n        }\n      }\n    };\n    $.getFromUniqueIdentifier = function(uniqueIdentifier){\n      var ret = false;\n      $h.each($.files, function(f){\n        if(f.uniqueIdentifier==uniqueIdentifier) ret = f;\n      });\n      return(ret);\n    };\n    $.getSize = function(){\n      var totalSize = 0;\n      $h.each($.files, function(file){\n        totalSize += file.size;\n      });\n      return(totalSize);\n    };\n    $.handleDropEvent = function (e) {\n      onDrop(e);\n    };\n    $.handleChangeEvent = function (e) {\n      appendFilesFromFileList(e.target.files, e);\n      e.target.value = '';\n    };\n    $.updateQuery = function(query){\n        $.opts.query = query;\n    };\n\n    return(this);\n  };\n\n\n  // Node.js-style export for Node and Component\n  if (typeof module != 'undefined') {\n    module.exports = Resumable;\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD/requirejs: Define the module\n    define(function(){\n      return Resumable;\n    });\n  } else {\n    // Browser: Expose to window\n    window.Resumable = Resumable;\n  }\n\n})();\n","<template>\n  <div>\n    <v-alert v-if=\"dragover\" type=\"info\" style=\"position: fixed; height: 80px; z-index: 10; bottom: 0; left: 50%\">\n      Drop files to upload them to:\n      <p>\n        <strong>{{ path }}</strong>\n      </p>\n    </v-alert>\n\n    <v-alert v-if=\"progress > 0\" dark\n      style=\"position: fixed; width: 100%; z-index: 10; left: 0; bottom: 0; margin: 0 auto;\">\n      <v-progress-linear v-model=\"progress\" height=\"25\">\n        <template v-slot:default=\"{ value }\">\n          <strong>Uploading {{ fileName }}</strong>\n        </template>\n      </v-progress-linear>\n    </v-alert>\n\n    <v-btn title=\"Upload file\" ref=\"uploadFileButton\" icon>\n      <v-icon>mdi:mdi-upload</v-icon>\n    </v-btn>\n    <v-btn v-if=\"folder\" title=\"Upload folder\" ref=\"uploadFolderButton\" icon>\n      <v-icon>mdi:mdi-folder-arrow-up</v-icon>\n    </v-btn>\n\n  </div>\n</template>\n\n<script>\nimport Resumable from \"resumablejs\";\n\nexport default {\n  props: {\n    serverId: null,\n    path: null,\n    dropZone: null,\n    folder: null,\n    fileType: null,\n  },\n\n  watch: {\n    path: function (newVal) {\n      this.data.path = newVal;\n    },\n    folder: function () {\n      this.folder = true;\n    },\n    serverId: function () {\n      this.initUpload();\n    },\n    dropZone: function () {\n      this.initUpload();\n    }\n  },\n\n  mounted() {\n    this.initUpload();\n  },\n\n  data() {\n    return {\n      fetching: false,\n      data: {},\n      error: \"\",\n      dialog: false,\n      r: null,\n      dragover: false,\n      progress: 0,\n      fileName: ''\n    };\n  },\n\n  methods: {\n    initUpload() {\n      if (!this.dropZone) {\n        return;\n      }\n\n      this.r = new Resumable({\n        target: \"https://serverwand.com/api/servers/\" + this.serverId + \"/files\",\n        testChunks: false,\n        query: {\n          cmd: \"upload\",\n          chunked: 1,\n        },\n        withCredentials: true,\n        chunkSize: 1 * 1024 * 1024,\n        fileType: this.fileType,\n      });\n\n      this.r.assignBrowse(this.$refs.uploadFileButton.$el);\n\n      if (this.$refs.uploadFolderButton) {\n        this.r.assignBrowse(this.$refs.uploadFolderButton.$el, true);\n      }\n\n      let self = this;\n      this.r.on(\"fileAdded\", function () {\n        self.error = \"\";\n        this.opts.query.path = self.path;\n        this.upload();\n      });\n\n      this.r.on(\"fileProgress\", file => {\n        let perc = parseInt(this.r.progress() * 100);\n\n        this.progress = perc;\n        this.fileName = file.fileName;\n        this.dragover = false;\n      });\n\n      this.r.on(\"fileSuccess\", (file, message) => {\n        let data = JSON.parse(message);\n        if (data.error) {\n          this.error = data.error;\n        }\n      });\n\n      this.r.on(\"complete\", function () {\n        //clear upload queue so you can upload the same file\n        this.cancel();\n\n        self.$emit(\"complete\");\n\n        if (self.error) {\n          self.$emit(\"error\", self.error);\n        }\n      });\n\n      this.r.on(\"error\", message => this.$emit(\"error\", message));\n      this.r.assignDrop(this.dropZone.$el);\n\n      // handle dragover\n      let enterTarget = null;\n      this.dropZone.$el.addEventListener(\"dragenter\", (e) => {\n        console.log('dragenter');\n\n        e.preventDefault();\n        enterTarget = e.target;\n        this.dragover = true;\n      });\n      this.dropZone.$el.addEventListener(\"dragleave\", (e) => {\n        if (enterTarget == e.target) {\n          console.log('dragleave');\n          e.preventDefault();\n          this.dragover = false;\n        }\n      });\n    }\n  }\n\n};\n</script>","import { render } from \"./Upload.vue?vue&type=template&id=4214bb45\"\nimport script from \"./Upload.vue?vue&type=script&lang=js\"\nexport * from \"./Upload.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-dialog v-model=\"show\" persistent width=\"600\">\n    <v-alert :title=\"message\" color=\"primary\">\n      <template v-slot:prepend>\n        <v-icon icon=\"fas fa-magic fa-2x faa-horizontal animated\"></v-icon>\n      </template>\n    </v-alert>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  name: \"Loading\",\n  data: () => {\n    return {\n      show: false\n    }\n  },\n  props: {\n    value: {\n      type: Boolean,\n      default: false,\n    },\n    message: {\n      type: String,\n      default: \"Summoning...\",\n    },\n  },\n  watch: {\n    value: function (newVal) {\n      this.show = newVal;\n    }\n  }\n};\n</script>\n\n<style>\n.v-dialog.centered-dialog {\n  box-shadow: none;\n  border-radius: 0;\n  width: auto;\n}\n</style>","import { render } from \"./Loading.vue?vue&type=template&id=d2c3f588\"\nimport script from \"./Loading.vue?vue&type=script&lang=js\"\nexport * from \"./Loading.vue?vue&type=script&lang=js\"\n\nimport \"./Loading.vue?vue&type=style&index=0&id=d2c3f588&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["Resumable","opts","this","version","support","Blob","prototype","webkitSlice","mozSlice","slice","$","files","defaults","chunkSize","forceChunkSize","simultaneousUploads","fileParameterName","chunkNumberParameterName","chunkSizeParameterName","currentChunkSizeParameterName","totalSizeParameterName","typeParameterName","identifierParameterName","fileNameParameterName","relativePathParameterName","totalChunksParameterName","throttleProgressCallbacks","query","headers","preprocess","method","uploadMethod","testMethod","prioritizeFirstAndLastChunk","target","testTarget","parameterNamespace","testChunks","generateUniqueIdentifier","getTarget","maxChunkRetries","chunkRetryInterval","undefined","permanentErrors","maxFiles","withCredentials","xhrTimeout","clearInput","chunkFormat","setChunkTypeFromFile","maxFilesErrorCallback","errorCount","getOpt","alert","minFileSize","minFileSizeErrorCallback","file","fileName","name","$h","formatSize","maxFileSize","maxFileSizeErrorCallback","fileType","fileTypeErrorCallback","o","$opt","Array","options","each","option","ResumableChunk","fileObj","ResumableFile","resumableObj","events","on","event","callback","push","toLowerCase","fire","args","i","arguments","length","apply","stopEvent","e","stopPropagation","preventDefault","custom","relativePath","webkitRelativePath","size","replace","contains","array","test","result","value","toFixed","request","params","separator","indexOf","joinedParams","join","onDrop","dataTransfer","items","loadFiles","processItem","item","path","cb","entry","isFile","isDirectory","File","webkitGetAsEntry","processDirectory","getAsFile","processCallbacks","directory","dirReader","createReader","readEntries","entries","map","bind","call","appendFilesFromFileList","fileList","removeFile","filesSkipped","remaining","decreaseReamining","window","setTimeout","fileTypeFound","index","extension","addFile","uniqueIdentifier","getFromUniqueIdentifier","f","container","srcElement","then","_prevProgress","_pause","_error","chunkEvent","message","abort","chunks","isComplete","abortCount","c","status","cancel","_chunks","uploadNextChunk","retry","bootstrap","firedRetry","upload","round","Math","ceil","floor","maxOffset","max","offset","progress","ret","error","isUploading","uploading","chunk","outstanding","preprocessState","pause","isPaused","fileObjSize","fileObjType","type","lastProgressCallback","Date","tested","retries","pendingRetry","loaded","startByte","endByte","min","xhr","XMLHttpRequest","testHandler","send","addEventListener","customQuery","k","v","encodeURIComponent","concat","filter","pair","open","timeout","customHeaders","setRequestHeader","preprocessFinished","doneHandler","retryInterval","reduce","func","bytes","data","FormData","append","fr","FileReader","onload","readAsDataURL","readyState","responseText","relative","factor","s","found","assignBrowse","domNodes","domNode","input","tagName","document","createElement","setAttribute","style","display","opacity","focus","click","appendChild","removeAttribute","fileTypes","assignDrop","unAssignDrop","removeEventListener","num","totalDone","totalSize","addFiles","splice","getSize","handleDropEvent","handleChangeEvent","updateQuery","module","exports","_createElementBlock","$data","dragover","_createBlock","_component_v_alert","key","default","_withCtx","_createTextVNode","_createElementVNode","_toDisplayString","$props","_","_createCommentVNode","dark","_createVNode","_component_v_progress_linear","modelValue","_cache","$event","height","_ref","_component_v_btn","title","ref","icon","_component_v_icon","folder","props","serverId","dropZone","watch","newVal","initUpload","mounted","fetching","dialog","r","methods","_this","cmd","chunked","$refs","uploadFileButton","$el","uploadFolderButton","self","perc","parseInt","JSON","parse","$emit","enterTarget","console","log","__exports__","render","_component_v_dialog","_ctx","show","persistent","width","color","prepend","Boolean","String"],"sourceRoot":""}